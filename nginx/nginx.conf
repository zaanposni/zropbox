# Run as a less privileged user for security reasons.
user nginx;

# #worker_threads to run;
# "auto" sets it to the #CPU_cores available in the system, and
# offers the best performance.
worker_processes    auto;

events { worker_connections 1024; }

http {
    include mime.types;
    limit_req_zone $http_x_forwarded_for zone=mylimit:10m rate=1r/s;

    log_format compression '[$time_local] "$http_x_forwarded_for" - '
                           '$status "$request" '
                           '"$http_referer" "$http_user_agent" - $body_bytes_sent';

    server {
        listen 80;
        listen [::]:80;

        root /var/www/data;
        index index.html;

        access_log /var/log/nginx/access_custom.log compression;
        access_log /dev/stdout compression;

        location ~ /\.ht {
            deny all;
        }

        location ^~ /swagger {
            limit_req zone=mylimit burst=5 nodelay;

            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-For $http_x_forwarded_for;
            proxy_pass http://zropbox_backend:80;
        }

        location ^~ /api {
            limit_req zone=mylimit burst=5 nodelay;

            client_max_body_size 0;

            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-For $http_x_forwarded_for;
            proxy_pass http://zropbox_backend:80;
        }

        location ^~ /share {
            limit_req zone=mylimit burst=5 nodelay;

            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-For $http_x_forwarded_for;
            proxy_pass http://zropbox_backend:80;
        }

        location / {
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "1";
            try_files $uri $uri/ /index.html;
        }
    }
}